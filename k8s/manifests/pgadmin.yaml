apiVersion: v1
kind: ConfigMap
metadata:
  name: pgadmin-config
data:
  servers.json: |
    {
        "Servers": {
          "1": {
            "Name": "HARP (password is «password»)",
            "Group": "Servers",
            "Port": 5432,
            "Username": "harp",
            "Host": "harp-postgresql",
            "SSLMode": "prefer",
            "MaintenanceDB": "postgres"
          }
        }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: pgadmin
spec:
  selector:
    app: pgadmin
  ports:
    - protocol: TCP
      port: 80
      targetPort: http
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pgadmin-data-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  storageClassName: hostpath
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pgadmin
  labels:
    app: pgadmin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pgadmin
  template:
    metadata:
      labels:
        app: pgadmin
    spec:
      containers:
        - name: pgadmin
          image: elestio/pgadmin:REL-8_9
          env:
            - name: PGADMIN_DEFAULT_EMAIL
              value: admin@example.com
            - name: PGADMIN_DEFAULT_PASSWORD
              value: admin
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          volumeMounts:
            - name: pgadmin-config
              mountPath: /pgadmin4/servers.json
              subPath: servers.json
              readOnly: true
            - name: pgadmin-data
              mountPath: /var/lib/pgadmin
      volumes:
        - name: pgadmin-config
          configMap:
            name: pgadmin-config
        - name: pgadmin-data
          persistentVolumeClaim:
              claimName: pgadmin-data-pvc


---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: pgadmin
spec:
  ingressClassName: nginx
  rules:
    - host: pgadmin.harp.demo
      http:
        paths:
          - pathType: Prefix
            backend:
              service:
                name: pgadmin
                port:
                  number: 80
            path: /
  tls:
    - hosts:
        - pgadmin.harp.demo
      secretName: demo-tls
